<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, shrink-to-fit=no"
    />
    <meta name="description" content="" />
    <meta name="author" content="" />

    <title>SB Admin 2 - Register</title>

    <!-- Custom fonts for this template-->
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
    />
    <link
      href="vendor/fontawesome-free/css/all.min.css"
      rel="stylesheet"
      type="text/css"
    />
    <link
      href="https://fonts.googleapis.com/css?family=Nunito:200,200i,300,300i,400,400i,600,600i,700,700i,800,800i,900,900i"
      rel="stylesheet"
    />

    <!-- Custom styles for this template-->
    <link href="css/sb-admin-2.min.css" rel="stylesheet" />
  </head>

  <body class="bg-gradient-primary">
    <div class="container">
      <div class="card o-hidden border-0 shadow-lg my-5">
        <% if (errorMessage && errorMessage.trim() !== "") { %>
            <div class="alert alert-danger mt-3" id="alertBox">
                <%= errorMessage %>
                <button type="button" class="close" id="closeAlert" data-dismiss="alert-danger" aria-label="Close">
                  <span aria-hidden="true">&times;</span>
              </button>
            </div>
        <% } %>
        <div class="card-body p-0">
          <!-- Nested Row within Card Body -->
          <div class="row">
            <div class="col-lg-5 d-none d-lg-block bg-register-image"></div>
            <div class="col-lg-7">
              <div class="p-5">
                <div class="text-center">
                  <h1 class="h4 text-gray-900 mb-4">Create an Account!</h1>
                </div>
                <form class="user" action="/signup" method="post">
                  <div class="form-group">
                    <div class="col-sm-6 mb-3 mb-sm-0">
                      <input
                        type="text"
                        class="form-control form-control-user"
                        id="exampleFirstName"
                        name="name"
                        placeholder="Name"
                        required
                      />
                    </div>
                  </div>
                  <div class="form-group">
                    <input
                      type="email"
                      class="form-control form-control-user"
                      id="exampleInputEmail"
                      name="email"
                      placeholder="Email Address"
                    />
                  </div>
                  <div class="form-group row">
                    <div class="col-sm-6 mb-3 mb-sm-0">
                      <input
                        type="password"
                        class="form-control form-control-user"
                        id="exampleInputPassword"
                        name="password"
                        placeholder="Password"
                      />
                    </div>
                    <div class="col-sm-6">
                      <input
                        type="password"
                        class="form-control form-control-user"
                        id="exampleRepeatPassword"
                        name="confirmPasswrod"
                        placeholder="Repeat Password"
                      />
                    </div>
                  </div>
                  <!-- selecting state and city  -->
                  <div class="form-group mt-3">
                    <div class="card">
                      <div class="card-header">Select State and City</div>
                      <div class="card-body">
                        <div class="mb-3">
                          <select name="state" id="state" class="form-control">
                            <option value="">Select State</option>
                          </select>
                        </div>
                        <div class="mb-3">
                          <select name="city" id="city" class="form-control">
                            <option value="">Select City</option>
                          </select>
                        </div>
                      </div>
                    </div>
                  </div>
                  <button class="btn btn-primary btn-user btn-block">
                    Register Account
                  </button>
                  <hr />
                  <a
                    href="index.html"
                    class="btn btn-google btn-user btn-block"
                  >
                    <i class="fab fa-google fa-fw"></i> Register with Google
                  </a>
                  <a
                    href="index.html"
                    class="btn btn-facebook btn-user btn-block"
                  >
                    <i class="fab fa-facebook-f fa-fw"></i> Register with
                    Facebook
                  </a>
                </form>
                <hr />
                <div class="text-center">
                  <a class="small" href="/forgot-password"
                    >Forgot Password?</a
                  >
                </div>
                <div class="text-center">
                  <a class="small" href="/login"
                    >Already have an account? Login!</a
                  >
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Bootstrap core JavaScript-->
    <script src="vendor/jquery/jquery.min.js"></script>
    <script src="vendor/bootstrap/js/bootstrap.bundle.min.js"></script>

    <!-- Core plugin JavaScript-->
    <script src="vendor/jquery-easing/jquery.easing.min.js"></script>

    <!-- Custom scripts for all pages-->
    <script src="js/sb-admin-2.min.js"></script>

    <!-- script for confirm password and dependent dropdown for slecting state and city -->
    <script>
      // client side validation for confirm passwrod matching

      document.addEventListener("DOMContentLoaded", function () {
        const passwordField = document.getElementById("exampleInputPassword1");
        const confirmPasswordField = document.getElementById(
          "exampleInputConfirmPassword1"
        );

        confirmPasswordField.addEventListener("input", function () {
          const password = passwordField.value;
          const confirmPassword = confirmPasswordField.value;

          if (password === confirmPassword) {
            // If passwords match, remove any previous error messages
            confirmPasswordField.setCustomValidity("");
          } else {
            // If passwords don't match, set a custom validity to display an error message
            confirmPasswordField.setCustomValidity("Passwords must match.");
          }
        });
      });

      // Function to populate the state dropdown using fetch
      function populateStates() {
        fetch("/states")
          .then((response) => response.json())
          .then((data) => {
            const stateDropdown = document.getElementById("state");
            stateDropdown.innerHTML = '<option value="">Select State</option>';

            data.forEach((state) => {
              const option = document.createElement("option");

              option.value = state.id;
              option.textContent = state.S_name;
              stateDropdown.appendChild(option);
            });
          })
          .catch((error) => console.error("Error fetching states:", error));
      }

      // Function to populate the city dropdown based on the selected state using AJAX
      function populateCities(selectedStateId) {
        fetch(`/cities/${selectedStateId}`)
          .then((response) => response.json())
          .then((data) => {
            const cityDropdown = document.getElementById("city");
            cityDropdown.innerHTML = '<option value="">Select City</option>';
            data.forEach((city) => {
              const option = document.createElement("option");
              option.value = city.id;
              option.textContent = city.city_name;
              cityDropdown.appendChild(option);
            });
          })
          .catch((error) => console.error("Error fetching cities:", error));
      }

      // Event listener to trigger population of state dropdown on page load
      document.addEventListener("DOMContentLoaded", function () {
        populateStates();
        const stateDropdown = document.getElementById("state");
        stateDropdown.dispatchEvent(new Event("change"));
      });

      // Event listener to trigger population of city dropdown based on the selected state
      document.getElementById("state").addEventListener("change", function () {
        const selectedStateId = this.value;
        populateCities(selectedStateId);
      });
    </script>
    
    <!-- script for closing alert box -->
    <script src="/js/alert.js"></script>
  </body>
</html>
